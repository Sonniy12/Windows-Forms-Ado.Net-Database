// Дописала запросы по заданию

create database Filmography;
-------------------------------
Use Filmography;
create table Film
(ID int not null identity(1,1) primary key,
Name nvarchar(30) not null ,
Genre nvarchar(30)not null,
Country_of_issue nvarchar(30)not null,
Year_of_issue date default null,
Cost_per_film_money money default null,
[Image] varbinary(max) default null,


);
-------------------------------------
Use Filmography;

insert into Film
values 
('Безумный Макс','Боевик','США','12-04-1979',875,null),--гибсон
('Чего хотят женщины','Мелодрама','США','13-12-2000',910,null),--гибсон
('Грань будущего','Фантастика','США','28-05-2014',705,null),--круз
('Рыцарь дня','Комедия','США','16-06-2010',261 930 436,null),--круз
('Теряя это','Комедия','Канада','08-03-1983',614,null),--круз
('Собачья жизнь','Комедия','США','14-04-1918',450,null),--чаплин Киностудия United Artists Entertainment
('Искатель приключений','Комедия','США','22-10-1917',500,null),--чаплин
('Стажёр','Мелодрама','США','15-09-2015',850,null),--Дениро
('Джокер','Триллер','США','31-08-2019',1350,null),--Дениро
('Ганнибал','Детектив','США','04-04-2013',1250,null),--Миккельсен, Мадс

('Спецподразделение','Детектив','Дания','01-10-2000',450,null),--Миккельсен, Мадс
('Молчание ягнят','Триллер','США','30-01-1991',750,null),--ДЖ фостер, гибсон
('Мэверик','Комедия','США','20-05-1994',950,null),--ДЖ фостер
('Шерлок','Детектив','Великобритания','22-07-2010',1750,null),--Бенедикт Камбербэтч,Мартин Фриман
('Доктор Стрэндж','Технофэнтези','США','15-04-2016',350,null),--Бенедикт Камбербэтч
('Хоббит: Нежданное путешествие','Фэнтези','Новая Зеландия','28-11-2012',1570,null),--Мартин Фриман
('Хоббит: Пустошь Смауга','Фэнтези','Новая Зеландия','02-12-2013',1570,null),--Мартин Фриман
('Хоббит: Битва пяти воинств','Фэнтези','Новая Зеландия','01-12-2014',1570,null),--Мартин Фриман
('Охотники за привидениями','Фантастика','США','07-06-1984',350,null),--Сигурни Уивер
('Чужие','Ужасы','США','14-06-1986',350,null),--Сигурни Уивер

('Секретные материалы','Триллер','Канада','10-09-1993',1350,null),--дж андерсон
('Трамвай «Желание»','Драма','Великобритания','18-10-2014',765,null),--дж андерсон
('Мост','Детектив','Швеция','21-09-2011',1250,null),--София Хелин
('Арн: Рыцарь-тамплиер','Боевик','Швеция','17-02-2007',1050,null),--София Хелин
('День сурка','Комедия','США','04-02-1993',750,null),--Энди МакДауэлл
('Вид на жительство','Драма','Франция','23-12-1990',650,null),--Энди МакДауэлл,Жерар Депардье
('Невезучие','Комедия','Франция','09-12-1983',460,null),--Жерар Депардье
('Человек в железной маске','Приключения','США','15-03-1998',670,null),--Жерар Депардье
('Большой куш','Криминал','Великобритания','23-08-2000',1150,null),--Брэд пит
('Бойцовский клуб','Криминал','США','10-09-1999',1080,null),--Брэд пит

('В джазе только девушки','Мелодрама','США','19-03-1959',830,null),--Мэрилин Монро
('Как выйти замуж за миллионера','Мелодрама','США','04-11-1953',830,null),--Мэрилин Монро
('Друзья','Комедия','США','22-09-1994',785,null),--дж энистон
('Обещать — не значит жениться','Мелодрама','США','09-08-2009',840,null);--дж энистон
('Голубая бездна','Приключения','Франция','11-05-1988',730,null),--Люк Бессон
('Такси 2','Комедия','Франция','25-03-2000',1025,null);--Люк Бессон киностудия EuropaCorp
------------------------------------------------------------------------------------
Use Filmography;


_______________________________________________________
use Filmography;
create table Rating
(
ID int not null identity(1,1) primary key,
good_rated int default null,
bad_rated int default null,
fk_id_film int REFERENCES Film(ID)
);
-----------------------------------

use Filmography;
insert into  Rating
values 
(1034,325,1),
(1634,475,2),
(2034,785,3),
(972,137,4),
(457,389,5),
(289,247,6),
(389,298,7),
(893,75,8),
(3159,56,9),
(1917,783,10),

(1857,154,11),
(2760,219,12),
(1671,326,13),
(2634,412,14),
(2018,176,15),
(3511,317,16),
(2934,409,17),
(3206,205,18),
(1873,175,19),
(2983,361,20),

(3782,428,21),
(1634,575,22),
(2234,328,23),
(1034,375,24),
(3766,117,25),
(1708,475,26),
(2762,279,27),
(1863,431,28),
(3834,107,29),
(2991,67,30),

(4001,123,31),
(2934,275,32),
(4334,269,33),
(1994,195,34),
(334,175,35),
(3027,301,36);
---------------------------------------------------------

use Filmography;
create table Countries_and_languages
(
ID int not null identity(1,1) primary key,
Display_country  nvarchar(50)not null,
Translated_language nvarchar(50)not null,
fk_id_film int REFERENCES Film(ID)
);
---------------------------------------

use Filmography;
insert into  Countries_and_languages
values 
('Великобритания','Анг-й язык',1),
('США','Анг-й язык',1),
('Франция','Франц-й язык',1),
('Германия','Немецкий язык',1),
('Япония','Япон-й язык',1),
('Испания','Испанский язык',1),

('Великобритания','Анг-й язык',2),
('США','Анг-й язык',2),
('Франция','Франц-й язык',2),
('Германия','Немецкий язык',2),
('Япония','Япон-й язык',2),
('Испания','Испанский язык',2),
('Италия','Итал-й язык',2),
('Чехия','Чешский язык',2),
('Россия','Русский язык',2),

('Великобритания','Анг-й язык',3),
('США','Анг-й язык',3),
('Франция','Франц-й язык',3),
('Германия','Немецкий язык',3),
('Япония','Япон-й язык',3),
('Испания','Испанский язык',3),
('Италия','Итал-й язык',3),
('Чехия','Чешский язык',3),
('Россия','Русский язык',3),
('Бельгия','Франц-й язык',3),
('Финляндия','Финский язык',3),
('Греция','Греческий язык',3),

('Великобритания','Анг-й язык',4),
('США','Анг-й язык',4),
('Болгария','Болгар-й язык',4),
('Германия','Немецкий язык',4),
('Япония','Япон-й язык',4),
('Испания','Испанский язык',4),
('Грузия','Груз-й язык',4),
('Чехия','Чешский язык',4),
('Россия','Русский язык',4),
('Румыния','Румын-й язык',4),
('Финляндия','Финский язык',4),
('Греция','Греческий язык',4),

('Великобритания','Анг-й язык',5),
('США','Анг-й язык',5),
('Франция','Франц-й язык',5),
('Германия','Немецкий язык',5),
('Испания','Испанский язык',5),
('Италия','Итал-й язык',5),

('Великобритания','Анг-й язык',6),
('США','Анг-й язык',6),
('Великобритания','Анг-й язык',7),
('США','Анг-й язык',7),

('Великобритания','Анг-й язык',8),
('США','Анг-й язык',8),
('Франция','Франц-й язык',8),
('Германия','Немецкий язык',8),
('Япония','Япон-й язык',8),
('Испания','Испанский язык',8),
('Италия','Итал-й язык',8),
('Дания','Датский язык',8),
('Россия','Русский язык',8),
('Швеция','Шведский язык',8),

('Франция','Франц-й язык',9),
('Германия','Немецкий язык',9),
('Япония','Япон-й язык',9),
('Испания','Испанский язык',9),
('Италия','Итал-й язык',9),
('Чехия','Чешский язык',9),
('Россия','Русский язык',9),
('Великобритания','Анг-й язык',9),
('Бельгия','Франц-й язык',9),
('Финляндия','Финский язык',9),
('Греция','Греческий язык',9),
('Румыния','Румын-й язык',9),
('Болгария','Болгар-й язык',9),
('США','Анг-й язык',9),

('Великобритания','Анг-й язык',10),
('США','Анг-й язык',10),
('Франция','Франц-й язык',10),
('Германия','Немецкий язык',10),
('Испания','Испанский язык',10),
('Италия','Итал-й язык',10),
('Россия','Русский язык',10),

('Великобритания','Анг-й язык',11),
('США','Анг-й язык',11),
('Франция','Франц-й язык',11),
('Германия','Немецкий язык',11),
('Дания','Датский язык',11),
('Россия','Русский язык',11),
('Швеция','Шведский язык',11),

('Великобритания','Анг-й язык',12),
('США','Анг-й язык',12),
('Франция','Франц-й язык',12),
('Германия','Немецкий язык',12),
('Дания','Датский язык',12),
('Россия','Русский язык',12),
('Швеция','Шведский язык',12),
('Норвегия','Норвежский язык',12),
('Нидерландов','Нидерлан-й язык',12),
('Япония','Япон-й язык',12),
('Италия','Итал-й язык',12),
('Греция','Греческий язык',12),

('Великобритания','Анг-й язык',13),
('США','Анг-й язык',13),
('Франция','Франц-й язык',13),
('Германия','Немецкий язык',13),
('Дания','Датский язык',13),
('Россия','Русский язык',13),
('Швеция','Шведский язык',13),
('Япония','Япон-й язык',13),
('Испания','Испанский язык',13),
('Грузия','Груз-й язык',13),
('Чехия','Чешский язык',13),
('Италия','Итал-й язык',13),
('Греция','Греческий язык',13),

('Великобритания','Анг-й язык',14),
('США','Анг-й язык',14),
('Франция','Франц-й язык',14),
('Германия','Немецкий язык',14),
('Дания','Датский язык',14),
('Россия','Русский язык',14),
('Швеция','Шведский язык',14),
('Испания','Испанский язык',14),
('Италия','Итал-й язык',14),
('Греция','Греческий язык',14),

('Франция','Франц-й язык',15),
('Германия','Немецкий язык',15),
('Япония','Япон-й язык',15),
('Испания','Испанский язык',15),
('Италия','Итал-й язык',15),
('Чехия','Чешский язык',15),
('Россия','Русский язык',15),
('Великобритания','Анг-й язык',15),
('Бельгия','Франц-й язык',15),
('Финляндия','Финский язык',15),
('Греция','Греческий язык',15),
('Румыния','Румын-й язык',15),
('Дания','Датский язык',15),
('Швеция','Шведский язык',15),
('США','Анг-й язык',15),

('Франция','Франц-й язык',16),
('Германия','Немецкий язык',16),
('Япония','Япон-й язык',16),
('Испания','Испанский язык',16),
('Италия','Итал-й язык',16),
('Чехия','Чешский язык',16),
('Россия','Русский язык',16),
('Великобритания','Анг-й язык',16),
('Бельгия','Франц-й язык',16),
('Финляндия','Финский язык',16),
('Греция','Греческий язык',16),
('Румыния','Румын-й язык',16),
('Дания','Датский язык',16),
('Швеция','Шведский язык',16),
('США','Анг-й язык',16),
('Норвегия','Норвежский язык',16),
('Нидерландов','Нидерлан-й язык',16),

('Франция','Франц-й язык',17),
('Германия','Немецкий язык',17),
('Япония','Япон-й язык',17),
('Испания','Испанский язык',17),
('Италия','Итал-й язык',17),
('Чехия','Чешский язык',17),
('Россия','Русский язык',17),
('Великобритания','Анг-й язык',17),
('Бельгия','Франц-й язык',17),
('Финляндия','Финский язык',17),
('Греция','Греческий язык',17),
('Румыния','Румын-й язык',17),
('Дания','Датский язык',17),
('Швеция','Шведский язык',17),
('США','Анг-й язык',17),
('Норвегия','Норвежский язык',17),
('Нидерландов','Нидерлан-й язык',17),

('Франция','Франц-й язык',18),
('Германия','Немецкий язык',18),
('Япония','Япон-й язык',18),
('Испания','Испанский язык',18),
('Италия','Итал-й язык',18),
('Чехия','Чешский язык',18),
('Россия','Русский язык',18),
('Великобритания','Анг-й язык',18),
('Бельгия','Франц-й язык',18),
('Финляндия','Финский язык',18),
('Греция','Греческий язык',18),
('Румыния','Румын-й язык',18),
('Дания','Датский язык',18),
('Швеция','Шведский язык',18),
('США','Анг-й язык',18),
('Норвегия','Норвежский язык',18),
('Нидерландов','Нидерлан-й язык',18),
('Китай','Китай-й язык',18),


('Франция','Франц-й язык',19),
('Германия','Немецкий язык',19),
('Япония','Япон-й язык',19),
('Испания','Испанский язык',19),
('Италия','Итал-й язык',19),
('Россия','Русский язык',19),
('Великобритания','Анг-й язык',19),
('Финляндия','Финский язык',19),
('Греция','Греческий язык',19),
('Дания','Датский язык',19),
('Швеция','Шведский язык',19),
('США','Анг-й язык',19),
('Нидерландов','Нидерлан-й язык',19),

('Франция','Франц-й язык',20),
('Германия','Немецкий язык',20),
('Япония','Япон-й язык',20),
('Испания','Испанский язык',20),
('Италия','Итал-й язык',20),
('Россия','Русский язык',20),
('Великобритания','Анг-й язык',20),
('Бельгия','Франц-й язык',20),
('Финляндия','Финский язык',20),
('Румыния','Румын-й язык',20),
('Дания','Датский язык',20),
('Швеция','Шведский язык',20),
('США','Анг-й язык',20),
('Норвегия','Норвежский язык',20),
('Нидерландов','Нидерлан-й язык',20),
('Китай','Китай-й язык',20),

('Франция','Франц-й язык',21),
('Германия','Немецкий язык',21),
('Канада','Анг-й язык',21),
('Испания','Испанский язык',21),
('Италия','Итал-й язык',21),
('Россия','Русский язык',21),
('Великобритания','Анг-й язык',21),
('Финляндия','Финский язык',21),
('Дания','Датский язык',21),
('Швеция','Шведский язык',21),
('США','Анг-й язык',21),
('Норвегия','Норвежский язык',21),
('Нидерландов','Нидерлан-й язык',21),

('Франция','Франц-й язык',22),
('Германия','Немецкий язык',22),
('Испания','Испанский язык',22),
('Италия','Итал-й язык',22),
('Россия','Русский язык',22),
('Великобритания','Анг-й язык',22),
('Дания','Датский язык',22),
('Швеция','Шведский язык',22),
('США','Анг-й язык',22),
('Нидерландов','Нидерлан-й язык',22),

('Франция','Франц-й язык',23),
('Германия','Немецкий язык',23),
('Испания','Испанский язык',23),
('Чехия','Чешский язык',23),
('Россия','Русский язык',23),
('Великобритания','Анг-й язык',23),
('Бельгия','Франц-й язык',23),
('Финляндия','Финский язык',23),
('Румыния','Румын-й язык',23),
('Дания','Датский язык',23),
('Швеция','Шведский язык',23),
('США','Анг-й язык',23),
('Норвегия','Норвежский язык',23),
('Нидерландов','Нидерлан-й язык',23),

('Франция','Франц-й язык',24),
('Германия','Немецкий язык',24),
('Финляндия','Финский язык',24),
('Дания','Датский язык',24),
('Швеция','Шведский язык',24),
('США','Анг-й язык',24),
('Норвегия','Норвежский язык',24),
('Нидерландов','Нидерлан-й язык',24),

('Франция','Франц-й язык',25),
('Германия','Немецкий язык',25),
('Канада','Анг-й язык',25),
('Испания','Испанский язык',25),
('Италия','Итал-й язык',25),
('Россия','Русский язык',25),
('Великобритания','Анг-й язык',25),
('Финляндия','Финский язык',25),
('Дания','Датский язык',25),
('Швеция','Шведский язык',25),
('США','Анг-й язык',25),
('Норвегия','Норвежский язык',25),
('Нидерландов','Нидерлан-й язык',25),

('Франция','Франц-й язык',26),
('Германия','Немецкий язык',26),
('Великобритания','Анг-й язык',26),
('Финляндия','Финский язык',26),
('Дания','Датский язык',26),
('Швеция','Шведский язык',26),
('США','Анг-й язык',26),
('Норвегия','Норвежский язык',26),
('Нидерландов','Нидерлан-й язык',26),

('Франция','Франц-й язык',27),
('Германия','Немецкий язык',27),
('Испания','Испанский язык',27),
('Италия','Итал-й язык',27),
('Россия','Русский язык',27),
('Великобритания','Анг-й язык',27),
('Финляндия','Финский язык',27),
('Дания','Датский язык',27),
('Нидерландов','Нидерлан-й язык',27),

('Франция','Франц-й язык',28),
('Германия','Немецкий язык',28),
('Япония','Япон-й язык',28),
('Испания','Испанский язык',28),
('Италия','Итал-й язык',28),
('Россия','Русский язык',28),
('Великобритания','Анг-й язык',28),
('Финляндия','Финский язык',28),
('Румыния','Румын-й язык',28),
('Дания','Датский язык',28),
('Швеция','Шведский язык',28),
('США','Анг-й язык',28),
('Нидерландов','Нидерлан-й язык',28),


('Франция','Франц-й язык',29),
('Германия','Немецкий язык',29),
('Япония','Япон-й язык',29),
('Испания','Испанский язык',29),
('Италия','Итал-й язык',29),
('Россия','Русский язык',29),
('Великобритания','Анг-й язык',29),
('Бельгия','Франц-й язык',29),
('Финляндия','Финский язык',29),
('Греция','Греческий язык',29),
('Румыния','Румын-й язык',29),
('Дания','Датский язык',29),
('Швеция','Шведский язык',29),
('США','Анг-й язык',29),
('Норвегия','Норвежский язык',29),
('Нидерландов','Нидерлан-й язык',29),

('Франция','Франц-й язык',30),
('Германия','Немецкий язык',30),
('Япония','Япон-й язык',30),
('Испания','Испанский язык',30),
('Италия','Итал-й язык',30),
('Россия','Русский язык',30),
('Великобритания','Анг-й язык',30),
('Бельгия','Франц-й язык',30),
('Финляндия','Финский язык',30),
('Греция','Греческий язык',30),
('Румыния','Румын-й язык',30),
('Дания','Датский язык',30),
('Швеция','Шведский язык',30),
('США','Анг-й язык',30),
('Норвегия','Норвежский язык',30),
('Нидерландов','Нидерлан-й язык',30),

('Франция','Франц-й язык',31),
('Германия','Немецкий язык',31),
('Япония','Япон-й язык',31),
('Испания','Испанский язык',31),
('Италия','Итал-й язык',31),
('СССР','Русский язык',31),
('Великобритания','Анг-й язык',31),
('Финляндия','Финский язык',31),
('Дания','Датский язык',31),
('Швеция','Шведский язык',31),
('США','Анг-й язык',31),
('Норвегия','Норвежский язык',31),
('Нидерландов','Нидерлан-й язык',31),
('Греция','Греческий язык',31),

('Франция','Франц-й язык',32),
('Германия','Немецкий язык',32),
('Япония','Япон-й язык',32),
('Испания','Испанский язык',32),
('Италия','Итал-й язык',32),
('СССР','Русский язык',32),
('Великобритания','Анг-й язык',32),
('Финляндия','Финский язык',32),
('Дания','Датский язык',32),
('Швеция','Шведский язык',32),
('США','Анг-й язык',32),
('Норвегия','Норвежский язык',32),
('Нидерландов','Нидерлан-й язык',32),
('Греция','Греческий язык',32),

('Франция','Франц-й язык',33),
('Германия','Немецкий язык',33),
('Япония','Япон-й язык',33),
('Испания','Испанский язык',33),
('Италия','Итал-й язык',33),
('Россия','Русский язык',33),
('Великобритания','Анг-й язык',33),
('Бельгия','Франц-й язык',33),
('Финляндия','Финский язык',33),
('Греция','Греческий язык',33),
('Румыния','Румын-й язык',33),
('Дания','Датский язык',33),
('Швеция','Шведский язык',33),
('США','Анг-й язык',33),
('Норвегия','Норвежский язык',33),
('Нидерландов','Нидерлан-й язык',33),

('Франция','Франц-й язык',34),
('Германия','Немецкий язык',34),
('Япония','Япон-й язык',34),
('Испания','Испанский язык',34),
('Италия','Итал-й язык',34),
('Чехия','Чешский язык',34),
('Россия','Русский язык',34),
('Великобритания','Анг-й язык',34),
('Бельгия','Франц-й язык',34),
('Финляндия','Финский язык',34),
('Греция','Греческий язык',34),
('Румыния','Румын-й язык',34),
('Дания','Датский язык',34),
('Швеция','Шведский язык',34),
('США','Анг-й язык',34),
('Норвегия','Норвежский язык',34),
('Нидерландов','Нидерлан-й язык',34),
('Канада','Анг-й язык',34),

('Франция','Франц-й язык',35),
('Германия','Немецкий язык',35),
('СССР','Русский язык',35),
('Великобритания','Анг-й язык',35),
('Финляндия','Финский язык',35),
('Дания','Датский язык',35),
('Швеция','Шведский язык',35),
('США','Анг-й язык',35),
('Норвегия','Норвежский язык',35),
('Нидерландов','Нидерлан-й язык',35),
('Греция','Греческий язык',35),

('Франция','Франц-й язык',36),
('Германия','Немецкий язык',36),
('Япония','Япон-й язык',36),
('Испания','Испанский язык',36),
('Италия','Итал-й язык',36),
('Россия','Русский язык',36),
('Великобритания','Анг-й язык',36),
('Бельгия','Франц-й язык',36),
('Финляндия','Финский язык',36),
('Греция','Греческий язык',36),
('Румыния','Румын-й язык',36),
('Дания','Датский язык',36),
('Швеция','Шведский язык',36),
('США','Анг-й язык',36),
('Норвегия','Норвежский язык',36),
('Нидерландов','Нидерлан-й язык',36);
-----------------------------------------------
use Filmography;
select* from   Countries_and_languages;
--------------------------------------------------
Use Filmography;
create table Actors
(ID int not null identity(1,1) primary key,
Name nvarchar(50) not null ,
Surname nvarchar(50)not null,
Birthday date default null,
Place_of_birth nvarchar(50)default null,
Death_date date default null,

);
--------------------------------------------------
Use Filmography;
create table Actors_in_film
(ID int not null identity(1,1) primary key,
fk_id_film int REFERENCES Film(ID),
fk_id_actors int REFERENCES Actors(ID)

);
--------------------------------------------------
Use Filmography;

insert into  Actors
values 
('Мел','Гибсон','03-01-1956','Пикскилл, штат Нью-Йорк, США',null),
('Том','Круз','03-07-1962','Сиракьюс, Нью-Йорк, США',null),
('Чарли','Чаплин','16-04-1889','Лондон, Англия, Великобритания','25-12-1977'),
('Роберт','Де Ниро','17-08-1943','	Манхэттен, Нью-Йорк, США',null),
('Мадс','Миккельсен','22-11-1965','Копенгаген, Дания',null),
('Джоди','Фостер','19-11-1962','Лос-Анджелес, Калифорния, США',null),
('Бенедикт','Камбербэтч','19-07-1976','Хаммерсмит, Лондон',null),
('Мартин','Фримен','08-09-1971','Олдершот, Рашмур, Гэмпшир, Великобритания',null),
('Сигурни','Уивер','08-10-1949','Манхэттен, Нью-Йорк, США',null),
('Джиллиан','Андерсон','09-08-1968','Чикаго, Иллинойс, США',null),
('София','Хелин','25-04-1972','	Хувста, Эребру, Швеция',null),
('Энди','Макдауэлл','21-04-1958','Гаффни, Южная Каролина, США',null),
('Жерар','Депардье','27-12-1948','Шатору, Эндр, Франция',null),
('Брэд','Питт','18-12-1963','Шони, Оклахома, США',null),
('Мэрилин','Монро','01-06-1926','Лос-Анджелес, Калифорния, США','04-08-1962'),
('Дженнифер','Энистон','11-02-1969','Шерман-Окс, Калифорния, США',null),
('Люк','Бессон','18-03-1959','	Париж, Франция',null);

--------------------------------------------------------------
Use Filmography;
select* from Actors;
---------------------------------------------------------------
Use Filmography;
create table Profession
(ID int not null identity(1,1) primary key,
Name nvarchar (50) not null
);
--------------------------------------------------------
Use Filmography;
insert into Profession
values
('Актёр, Актриса'),
('Кинорежиссёр'),
('Кинопродюсер'),
('Сценарист'),
('Продюсер');

-----------------------------------------------------
Use Filmography;
insert into Actors_in_film
values
(1,1),
(2,1),
(3,2),
(4,2),
(5,2),
(6,3),
(7,3),
(8,4),
(9,4),
(10,5),
(11,5),
(12,6),
(13,6),
(13,1),
(14,7),
(15,7),
(14,8),
(16,8),
(17,8),
(18,8),
(19,9),
(20,9),

(21,10),
(22,10),
(23,11),
(24,11),
(25,12),
(26,12),
(26,13),
(27,13),
(28,13),
(29,14),
(30,14),

(31,15),
(32,15),
(33,16),
(34,16),
(35,17),
(36,17);

---------------------------------------------------
Use Filmography;
create table Actors_in_Profession
(ID int not null identity(1,1) primary key,
fk_id_prof int REFERENCES Profession(ID),
fk_id_actors int REFERENCES Actors(ID)

);
-----------------------------------------------
Use Filmography;
insert into Actors_in_Profession
values
(1,1),
(1,2),
(1,3),
(1,4),
(1,5),
(1,6),
(1,7),
(1,8),
(1,9),
(1,10),
(1,11),
(1,12),
(1,13),
(1,14),
(1,15),
(1,16),
(1,17),

(2,1),
(3,1),
(4,1),

(2,2),
(3,2),
(4,2),

(2,3),
(3,3),
(4,3),


(2,4),
(5,4),


(2,6),
(3,6),

(5,9),
(5,10),
(4,10),

(5,12),
(4,12),
(5,14),

(5,17),
(4,17);
-------------------------------------------
Use Filmography;
create table Citizenship_address_actor
(
ID int not null identity(1,1) primary key,
Country nvarchar(50)default null,
State nvarchar(50)default null,
City nvarchar(50)default null,
Address nvarchar(50)default null,
Citizenship nvarchar(50)default null,
fk_id_actors int  REFERENCES Actors(ID)
);
-----------------------------------------
Use Filmography;
insert into Citizenship_address_actor
values
('США','Калифорния','Лос-Анджелес',null,'Австралия, США',1),
('Великобритания','За́падный Су́ссекс','Ист-Гринстед',null,'США',2),
('Великобритания',null,'Лондон',null,'Великобритании',3),
('США','Нью-Йорк','Вест-Ви́ллидж',null,'США, Италия',4),
('Дания',null,'Копенгаген',null,'Дания',5),
('США','Калифорния','Лос-Анджелес',null,'США',6),
('Великобритания',null,'Лондон',null,'Великобритании',7),
('Великобритания','Хартфордшир','Хартфорд',null,'Великобритания',8),
('США','Нью-Йорк','Нью-Йорк',null,'США',9),
('Великобритания',null,'Лондон',null,'Великобритании,США',10),
('Швеция','лен Эребру','Хувста',null,'Швеция',11),
('США','Северная Каролина',null,null,'США',12),
('Россия','Мордовия','Саранск',null,'Франция, Россия',13),
('США','Калифорния, район Лос-Анджелеса','Лос-Фелис',null,'США',14),
('США','Калифорния','Лос-Анджелес',null,'США',15),
('США','Калифорния','Беверли Хиллз',null,'США',16),
('Франция',null,'Париж',null,'Франция',17);
------------------------------------------------
Use Filmography;
create table Actors_progress
(
ID int not null identity(1,1) primary key,
Nomination_awards nvarchar(50)default null,
Film_studio_president nvarchar(50)default null,
Studio_name nvarchar(50)default null,
Actor_income  money default null,
fk_id_actors int default null REFERENCES Actors(ID)
);


------------------------------------------------

Use Filmography;
insert into Actors_progress
values
('Оскар',null,null,520000000,1),
('Золотой глобус',null,null,258000000,2),
('Золотой лев','Чарльз Чаплин ','Киностудия United Artists Entertainment',200000,3),
('Святой Георгий',null,null, 320000000,4),
('Сатурн',null,null, 270000000,5),
('BAFTA',null,null, 236000000,6),
('Премия Лоренса Оливье',null,null, 287000000,7),
('British Academy Television Awards',null,null, 217000000,8),
('BAFTA',null,null, 245000000,9),
('Премия Гильдии киноактёров США ',null,null, 179000000,10),
('Guldbagge Award',null,null, 98000000,11),
('Сезар',null,null, 177000000,12),
('Золотой лев',null,null, 310000000,13),
('Оскар',null,null, 284000000,14),
('Золотой глобус',null,null,  1000000,15),
('Эмми',null,null, 270000000,16),
('Сезар','Люк Бессон ','Киностудия EuropaCorp',258000000,17);
----------------------------------------------------
Use Filmography;
select* from  Actors_progress;

--------------Информация о фильме !--Ф-1
use Filmography;

select* from Film

WHERE Film.Name='Безумный Макс';

------------------------Дата р. акт-ра-А!
select* from Actors 
where Actors.Name='Том'
//--------------------------------2
Use Filmography;
select* from Film    Join Actors ON Actors.ID>0 AND Film.ID>0
 Join Actors_in_film  ON Actors.ID= Actors_in_film.fk_id_actors And Actors_in_film.fk_id_film= Film.ID
where Film.Name='Безумный Макс';

         --------------------Вывод фильмов по стоимости !!
use Filmography;

select Film.Name, Film.Cost_per_film_money from Film ;


--------------------------------------------самый дорогой фильм!!Д-9_1
use Filmography;

select* from Film

WHERE Cost_per_film_money = (SELECT Max(Cost_per_film_money) FROM Film);

------------------------------------------самый высокий рейтинг!!Д-8_2
use Filmography;

select Name, good_rated from Film,Rating where Film.ID=Rating.ID AND  good_rated = (SELECT MAX(good_rated) FROM Rating)  ;

  ;
-------------------------------------------------самый старый фильм!!Д-7_3
use Filmography;

select* from Film

WHERE Year_of_issue = (SELECT Min(Year_of_issue) FROM Film);

------------------------------------------------заданный жанр,вывод фильмов,чья стоиомсть меньше,чем фильм(выбор),заданной страны(выбор)!!-Д-6
use Filmography;

select* from Film where Film.Genre= 'Детектив'AND Film.Cost_per_film_money>(select* from Film where Film.Country_of_issue='США' );


---------------------------------------------------заданный жанр заданной страны!!Д-5
use Filmography;

select* from Film where Film.Genre= 'Комедия'AND Film.Country_of_issue='США' ;


--------------------------------заданный жанр вывод все фильмы,чья стоимость менше фильма и страны по условию !--Д-2
Use Filmography;

select Name, Genre='Комедия', Cost_per_film_money from Film where  Film.Cost_per_film_money <
(select  Cost_per_film_money  from Film where Film.Country_of_issue='США' AND Name='Джокер' );

-------------------------------------------- в заданных пределах стоимость.год выпуска, страна

Use Filmography;

select Name, Cost_per_film_money from Film where Film.Cost_per_film_money >1000 AND  Film.Country_of_issue='США'AND Film.Year_of_issue>'23-08-2000' ;

-------------------------------------------поиск стран по заданному жанру=кол-во фильмов !!Д-4
Use Filmography;

select Name,Country_of_issue, Genre,Count(*)as Count_genre from Film  GROUP BY Name, Country_of_issue,Genre HAVING Film.Genre='Триллер';

---------------------------------Вывод имен актеров и где проживают!!Д-3_4
Use Filmography;

select Actors.Name,Actors.Surname, Citizenship_address_actor.Country,Citizenship_address_actor.City from Actors, Citizenship_address_actor  where Actors.ID=Citizenship_address_actor.ID;


----------------------------------------------вывод места проживания по имени!-А-1
Use Filmography;
select Actors.ID, Actors.Name,Actors.Surname, Citizenship_address_actor.Country,Citizenship_address_actor.City  from Actors Inner Join Citizenship_address_actor On  Actors.ID=Citizenship_address_actor.ID And Actors.Name='Джоди' AND Actors.Surname= 'Фостер';

-------------------------------------имя,адрес актера, с заданным доходом, и профессией!
Use Filmography;
select Actors.Name,Actors.Surname, Citizenship_address_actor.Country, Citizenship_address_actor.City,Profession.Name,Actors_progress.Actor_income,
Actors_progress.Film_studio_president,Actors_progress.Studio_name from Actors Inner Join Citizenship_address_actor On  Actors.ID=Citizenship_address_actor.fk_id_actors
			Inner Join Actors_progress On  Actors_progress.fk_id_actors=Actors.ID
			Inner Join  Actors_in_Profession On Actors_in_Profession.fk_id_actors = Actors.ID
										Inner Join Profession On Profession.ID = Actors_in_Profession.fk_id_prof
										where Actors_progress.Actor_income>100000 AND Profession.Name ='Сценарист';
                                              ------------------------------------по имени!-А-2
Use Filmography;
select Actors.Name,Actors.Surname, Citizenship_address_actor.Country, Citizenship_address_actor.City,Profession.Name,Actors_progress.Actor_income,
Actors_progress.Film_studio_president,Actors_progress.Studio_name from Actors Inner Join Citizenship_address_actor On  Actors.ID=Citizenship_address_actor.fk_id_actors
			Inner Join Actors_progress On  Actors_progress.fk_id_actors=Actors.ID
			Inner Join  Actors_in_Profession On Actors_in_Profession.fk_id_actors = Actors.ID
										Inner Join Profession On Profession.ID = Actors_in_Profession.fk_id_prof
										where Actors.Name ='Мел';

------------------------------------------Вывод актеров+фильмы!!Д-2_5
Use Filmography;
select Actors.Name,Actors.Surname, Film.Name from Actors , Film, Actors_in_film where Actors.ID= Actors_in_film.fk_id_actors  And Actors_in_film.fk_id_film= Film.ID;
;

----------------------------------Вывод в каких фильмах учавствовал актер!-А-3
Use Filmography;
select Actors.Name,Actors.Surname, Film.Name from Actors    Join Film ON Actors.ID>0 AND Film.ID>0
 Join Actors_in_film  ON Actors.ID= Actors_in_film.fk_id_actors And Actors_in_film.fk_id_film= Film.ID
where Actors.Name='Мел' ;
 
-------------------------------Вывод наминаций актеров + президент киностудии!!Д-6_6
Use Filmography;
select Actors.Name,Actors.Surname, Actors_progress.Nomination_awards,
Actors_progress.Film_studio_president,Actors_progress.Studio_name
from Actors 
			Inner Join Actors_progress On  Actors_progress.fk_id_actors=Actors.ID;
		-----------------------------------------по имени!-А-4
Use Filmography;
select Actors.Name,Actors.Surname, Actors_progress.Nomination_awards,
Actors_progress.Film_studio_president,Actors_progress.Studio_name
from Actors 
			Inner Join Actors_progress On  Actors_progress.fk_id_actors=Actors.ID
		where Actors.Name='Мел';

									
------------------------------информация о фильме,рейтинг,перевод на языки !
Use Filmography;
select  Film.Name,Film.Country_of_issue,Film.Year_of_issue, Rating.good_rated,Rating.bad_rated,
Countries_and_languages.Display_country,Countries_and_languages.Translated_language
from Film		
			Inner Join Rating On  Rating.fk_id_film = Film.ID
			Inner Join Countries_and_languages On Countries_and_languages.fk_id_film= Film.ID;
                       --------------------------по названию фильма!--Ф-3
Use Filmography;
select  Film.Name,Film.Country_of_issue,Film.Year_of_issue, Rating.good_rated,Rating.bad_rated,
Countries_and_languages.Display_country,Countries_and_languages.Translated_language
from Film		
			Inner Join Rating On  Rating.fk_id_film = Film.ID
			Inner Join Countries_and_languages On Countries_and_languages.fk_id_film= Film.ID
			where Film.Name='Безумный Макс';

---------------		---------------------------Актеры, которые и президенты киностудий !!Д-1
									
Use Filmography;
select Actors.Name,Actors.Surname,Profession.Name,
Actors_progress.Film_studio_president,Actors_progress.Studio_name
from Actors 
			Inner Join Actors_progress On  Actors_progress.fk_id_actors=Actors.ID
			Inner Join  Actors_in_Profession On Actors_in_Profession.fk_id_actors = Actors.ID
										Inner Join Profession On Profession.ID = Actors_in_Profession.fk_id_prof
										where  Profession.Name ='Актёр, Актриса' AND Film_studio_president='Чарльз Чаплин '
										OR Film_studio_president='Люк Бессон' ;